diff --git includes/flag_handler_field_ops.inc includes/flag_handler_field_ops.inc
index 116ff67..aaa8f2b 100644
--- includes/flag_handler_field_ops.inc
+++ includes/flag_handler_field_ops.inc
@@ -109,7 +109,7 @@ class flag_handler_field_ops extends views_handler_field {
    * separate DB query to to avoid complexity and to make 'many to one' tests
    * (e.g. checking user roles) possible without causing duplicate rows.
    */
-  function pre_render($values) {
+  function pre_render(&$values) {
     if (!($flag = $this->get_flag())) {
       return; // Error message is printed in render().
     }
diff --git includes/flag_handler_relationships.inc includes/flag_handler_relationships.inc
index 0ac60af..a283042 100644
--- includes/flag_handler_relationships.inc
+++ includes/flag_handler_relationships.inc
@@ -120,7 +120,7 @@ class flag_handler_relationship_content extends flag_handler_relationship {
     }
   }
 
-  function options_validate($form, &$form_state) {
+  function options_validate(&$form, &$form_state) {
     if (!empty($form_state['no flags exist'])) {
       form_error($form, t('You must first create a flag'));
     }
@@ -130,7 +130,7 @@ class flag_handler_relationship_content extends flag_handler_relationship {
     return $this->options['user_scope'] == 'current' ? t('by current user') : t('by any user');
   }
 
-  function ui_name() {
+  function ui_name($short = FALSE) {
     // We put the bookmark name in the UI string to save space.
     return t('!group: !title', array('!group' => $this->definition['group'], '!title' => empty($this->options['flag']) ? t('(Please select a flag)') : $this->options['flag']));
   }
@@ -190,7 +190,7 @@ class flag_handler_relationship_counts extends flag_handler_relationship {
     // Nothing to show.
   }
 
-  function ui_name() {
+  function ui_name($short = FALSE) {
     // We put the bookmark name in the UI string to save space.
     return t('!group: !title counter', array('!group' => $this->definition['group'], '!title' => $this->options['flag']));
   }
