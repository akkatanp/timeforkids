<?php

/**
 * Implementation of menu_hook.
 */
function tfk_page_paths_menu(){
    //flog_it("tfk_page_paths_menu");
	$items = array();

        $items['store'] = array(
		'title' => 'TFK Store',
		'page callback' => 'tfk_store_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['magazine'] = array(
		'title' => 'TFK Magazine',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
    	$items['digital'] = array(
		'title' => 'Digital Edition',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['extras'] = array(
		'title' => 'TFK Extras',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['subscribe-renew'] = array(
		'title' => 'Subscribe & Renew',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access protected content')
	);
        $items['mini-sites'] = array(
		'title' => 'Mini-Sites',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);   
        $items['news-archive'] = array(
		'title' => 'News Archive',
		'page callback' => '_tfk_news_archive_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	); 
        $items['news-archive/%'] = array(
		'title' => 'News Archive',
		'page callback' => '_tfk_news_archive_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);  
        $items['info'] = array(
		'title' => 'Info',
		'page callback' => 'tfk_pv_page_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['404page'] = array(
		'title' => 'Page Not Found',
		'page callback' => 'tfk_not_found_page',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['deniedpage'] = array(
		'title' => 'SUBSCRIBER-ONLY CONTENT',
		'page callback' => 'tfk_denied_page',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
        $items['assessment'] = array(
		'title' => 'TFK Assessment',
		'page callback' => 'tfk_assessment_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
	return $items;
}


function _tfk_news_archive_callback(){
    return '';
}


function tfk_page_paths_preprocess_page(&$variables){
    global $user;
    global $base_path;
    
    $args = arg();
    //flog_it("***tfk_page_paths_preprocess_page:");
    
    // tfk-50, tfk-34, tfk-83: Add new items to paywall
    if ( isset($args[0]) && $args[0] == "node" && isset($variables['node']) ) { 
        $node = $args[1];
        //flog_it("content_type=".$variables['node']->type);
        if ($variables['node']->type == "article" || $variables['node']->type == "slideshow" || $variables['node']->type == "video" || $variables['node']->type == "minisite") {
            $flag = flag_get_flag("magazine_cover_story");
 
            //flog_it("is_flagged=".$flag->is_flagged($node));
            if ($flag->is_flagged($node)) {
                //flog_it("$node is flagged as a Magazine article");
                
                // Check to see if this is an anonymous user: if it is -> 403
                //flog_it("anon=".$variables['is_anon']);
                
                if ($variables['is_anon']) {
                   drupal_add_http_header('Status', '403 Forbidden');
                   //flog_it("Before drupal_deliver_page...");
                   drupal_deliver_page(MENU_ACCESS_DENIED);
                   //flog_it("After drupal_deliver_page: Calling drupal_exit()...");
                   drupal_exit();
                }
            }
        }
    }
    
    // Check for the tfk-magazine path and an anonymous user
    //flog_it("args[0]=".$args[0].", isn_anon=".$variables['is_anon']);
    if (strstr($args[0], "tfk-magazine") && $variables['is_anon']) {
        //flog_it("Before drupal_deliver_page...");
        drupal_add_http_header('Status', '403 Forbidden');
        drupal_deliver_page(MENU_ACCESS_DENIED);
        drupal_exit();
    }
    
    // Check for the digital editions path and an anonymous user
    if (strstr($args[0], "digital") && $variables['is_anon']) {
        flog_it("Found Anon digital editon path...");
        drupal_deliver_page(MENU_ACCESS_DENIED);
        drupal_exit();
    }
    
    if($args[0] == 'deniedpage'){
        $variables['section_title'] = 'SUBSCRIBER-ONLY CONTENT';
    }
    
    // Check to add (nid) to the admin/content page
    if(isset($variables['page']['content']['system_main']['admin']['nodes'])){
        foreach($variables['page']['content']['system_main']['admin']['nodes']['#options'] as $nid_id =>$node_item){
            $variables['page']['content']['system_main']['admin']['nodes']['#options'][$nid_id]['title']['data']['#title'] = $variables['page']['content']['system_main']['admin']['nodes']['#options'][$nid_id]['title']['data']['#title'].' (id:'.$nid_id.')';
            //flog_it("nid_id=".$nid_id.", node_item=".$node_item);
            
        }
    
    }
    
    // Check for TFK Assessment processing
    if ($args[0] == 'assessment') {
        //flog_it($variables);
        $variables['page']['sidebar_second'] = '';
        #$variables['page']['footer'] = '';
    }
}

function tfk_assessment_callback() {
    // tim.testaccount@tk.com 322942790, zip=20002, is an account which is eligible for an upgrade
    // tfa@tk.com 333470199, 20003, is an account which has TFA
    // password for both: welcom123
    flog_it("tfk_assessment_callback...");
  
    $args = arg();
    //flog_it("args[0]=".$args[0]);
    //flog_it("user_is_anonymous=".user_is_anonymous());

    // Check for the assessment access
    if (strstr($args[0], "assessment") && user_is_anonymous()) {
        flog_it("Found Anononymous user...");
        drupal_deliver_page(MENU_ACCESS_DENIED);
        drupal_exit();
    }
    

    // Check for no LUCIE Assessment access 
    flog_it($_COOKIE['Assessment-access'].", ".$_COOKIE['CGI-token']);
    if ($_COOKIE['Assessment-access'] === "no" && $_COOKIE['CGI-token'] != "") {
        flog_it("No Assessment access. Check with LUCIE again...");
        $token = $_COOKIE['CGI-token'];
        flog_it("token=".$token);
        $domain = variable_get('lucie_callback_domain', 'qa-lucie.timeinc.com');
        $url = 'https://'. $domain. '/webservices/entitlements?CGI-App-Id=com.timeinc.tk.web';
        $response = drupal_http_request($url, array('headers' => array('Content-Type'=>'application/json', 'CGI-token' => $token),
              'method'=> 'GET'
        ));
        //flog_it($response);

        // Decode the JSON data and pass to the call to get the user information
        $dataResponse = drupal_json_decode($response->data);
        flog_it($dataResponse);

        // Check for TFK Assessment access
        // Get the LUCIE account number
        $tcsAccountNumber = $dataResponse['issues'][0]['tcsAccountNumber'];
        flog_it("tcsAccountNumber=".$tcsAccountNumber);
        
        if ($tcsAccountNumber === "COMP") {
            flog_it("Has COMP access...");
            tfk_assessment_access_set_cookie("yes");
        } elseif ($tcsAccountNumber === null) {
            flog_it("Not a LUCIE member!!!");
            drupal_add_http_header('Status', '403 Forbidden');
            drupal_deliver_page(MENU_ACCESS_DENIED);
            drupal_exit();
        } else {
            $appIds = $dataResponse['tiersInfo']['availableAppIds'];
            flog_it($apIds);
            $appIdArr = split(',', $appIds);
            $found = 0;
            foreach ($appIdArr as $key=>$value) {
                if ($value == "com.timeinc.tfk.apple") {
                    //flog_it("Found com.timeinc.tfk.apple...");
                    $found = 1;
                    break;
                }
            }

            // Process results
            if ($found && is_numeric($tcsAccountNumber)) {
                flog_it("User has Assessment access.");
                tfk_assessment_access_set_cookie("yes");
            } else {
                flog_it("No Assessment Access. Goto TCS page...");
                tfk_assessment_access_set_cookie("no");
                // Goto the TCS sign-up page
                $url = 'https://wesqa.customersvc.com/servlet/Show?WESPAGE=am/tablet/tk/app/login.jsp&account='.$tcsAccountNumber;
                drupal_goto($url);
            }
        }
    } elseif ($_COOKIE['Assessment-access'] === "no") {
        flog_it("Final: no tcs access");
        drupal_set_message(t('No TFK Assessment Access...'), 'error');
        //drupal_add_http_header('Status', '403 Forbidden');
        //drupal_deliver_page(MENU_ACCESS_DENIED);
        //drupal_exit();
        drupal_goto('');
    }
    
    
    
    // Bring up the Cognero iframe
    flog_it("Has Assessment Access, bring up iframe");
    return theme('tfk_assessment');
}


function tfk_not_found_page(){
  return theme('tfk_not_found_page');
}

function tfk_denied_page(){
    return theme('tfk_denied_page');
}

function tfk_page_paths_theme() {
  flog_it("tfk_page_paths_theme...");
  return array(
    'tfk_not_found_page' => array(
      'template' => 'tfk-not-found-page',
      'variables' => array('list' => NULL),
    ),
    'tfk_denied_page' => array(
      'template' => 'tfk-denied-page',
      'variables' => array('list' => NULL),
    ),
    'tfk_assessment' => array(
      'template' => 'tfk-assessment',
      'variables' => array('list' => NULL),
    )
  );
}




function tfk_page_paths_permission() {
  //flog_it("tfk_page_paths_permission");
  return array(
    'access protected content' => array(
      'title' => t('TFK Custom Permission'),
      'description' => t('TFK Custom Permission'),
    ),
    'view anonymous board member' => array(
      'title' => t('TFK View Anonymous Board Member'),
      'description' => t('TFK View Anonymous Board Member'),
    )
  );
}

function tfk_store_callback(){
  return '';
  //return drupal_set_title('TFK Store');
}





function tfk_pv_page_callback() {
    //flog_it("tfk_pv_page_callback...");
	return '';
}



//$args = arg();
//if(isset($args[1]) && !is_numeric($args[1])){
//return $args[1];
//}elseif(isset($args[1]) && is_numeric($args[1])){
//    return $args[1];
//}else{
//    return 'all';
//}
