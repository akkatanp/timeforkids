<?php
/**
 * @file
 * Code for the Teachers Community feature.
 */

include_once('tfk_teachers_community.features.inc');

/**
 * Override or insert variables into the page templates.
 *
 * @param $variables
 *   An array of variables to pass to the theme template.
 * @param $hook
 *   The name of the template being rendered ("page" in this case.)
 */
function tfk_teachers_community_preprocess_page(&$variables, $hook) {
  $community_question = FALSE;
  // Node add/edit page, Spec 17F.
  if(arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'teacher-community-question') {
    $community_question = TRUE;

    $page['before_content'] = t('<h2>Submit to the Teachers Community</h2>');
  }
  
  // Node view page, Spec 17B.
  if(array_key_exists('node', $variables) && $variables['node']->type == 'teacher_community_question') {
    $community_question = TRUE;
  }
  
  // Common actions.
  if($community_question) {
    // Set title to TEACHER COMMUNITY.
    drupal_set_title(t('TEACHER COMMUNITY'));
        
    // Add CSS.
    drupal_add_css(drupal_get_path('module', 'tfk_teachers_community'). '/css/tfk_teachers_community.css', 'file');
    
    // Unset Editor's Menu.
    $page = & $variables['page'];
    unset($page['editor_menu']);
  }
}

/**
 * Preprocess node.
 */
function tfk_teachers_community_preprocess_node(&$variables, $hook) {

  // Node view page, Spec 17B.
  if(array_key_exists('node', $variables) && $variables['node']->type == 'teacher_community_question') {
    $_variables = & $variables;
    
    $variables['print_title'] = TRUE;
    
    $variables['question_date'] = date('F j, Y');
    
    unset($_variables['content']['links']);
  }
  
}

/**
 * Preprocess comment wrapper.
 */
function tfk_teachers_community_preprocess_comment_wrapper(&$variables, $hook) {
  if(arg(0) == 'node' && $variables['node']->type == 'teacher_community_question') {
    $variables['comments_header_title'] = t('TEACHERS RESPONSES');
    $variables['new_comment_label'] = t('ADD YOUR RESPONSE TO THE DISCUSSION');
  }
}

/**
 * Preprocess comment.
 */
function tfk_teachers_community_preprocess_comment(&$variables, $hook) {
  if($variables['node']->type == 'teacher_community_question' && arg(0) == 'node') {
    $_variables = & $variables;
    
    // Comments have no title in Spec 17B.
    unset($_variables['title']);
    
    // Add CSS classes.
    $variables['classes'][] = 'teacher_community_question';
    
    // Link to comment author's profile.
    $variables['author_profile_link'] = l('See Bio', 'user/'. $variables['comment']->uid);
    
    // Change submitted date format.
    $variables['submitted'] = date('n/j/Y', $variables['comment']->changed);
    
    // Supress links for non-editorial/admin users.
    $auth_roles = array('administrator', 'editor');
    $supress_links = TRUE;
    foreach($auth_roles as $auth_role) {
      // If current user is the auth list, show him the links.
      if(array_search($auth_role, $variables['user']->roles) !== FALSE) {
        $supress_links = FALSE;
      }
    }
    if($supress_links) {
      unset($_variables['content']['links']);
    }
  
    // Unset variables we are not going to use.
    unset($_variables['permalink']);
    unset($_variables['status']);
  }
}

/**
 * Implementation of hook_form_FORM_ID_alter.
 *
 * @param array $form
 *   Nested array of form elements that comprise the form.
 * @param array $form_state
 *   A keyed array containing the current state of the form.
 * @param string $form_id
 *   A keyed array containing the current state of the form.
 */
function tfk_teachers_community_form_teacher_community_question_node_form_alter(&$form, &$form_state, $form_id) {
  
  // Cleanup extraneous fields.
  $form['menu']['#access'] = FALSE;
  $form['locations']['#access'] = FALSE;
  $form['revision_information']['#access'] = FALSE;
  $form['path']['#access'] = FALSE;
  $form['comment_settings']['#access'] = FALSE;
  $form['author']['#access'] = FALSE;
  $form['options']['#access'] = FALSE;
  
  $actions = & $form['actions'];
  unset($actions['preview']);
}

/**
 * Implementation of hook_form_FORM_ID_alter.
 *
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function tfk_teachers_community_form_comment_node_teacher_community_question_form_alter(&$form, &$form_state, $form_id) {

  $_form = & $form;
  
  $form['actions']['submit']['#value'] = t('Submit Your Response');
  
  // We need the author for the admin interface, so we leave that in.
  $form['author']['#access'] = FALSE;
  
  // But we don't need the subject, so we can get rid of it.
  unset($_form['subject']);
  
  // Unset other stuff.
  unset($_form['actions']['preview']);
  unset($_form['comment_body']['und'][0]['#title']);
  
}

/**
 * Implementation of hook_custom_theme.
 */
function tfk_teachers_community_custom_theme() {
  // Switch from the admin theme to tfk when adding a question.
  if(arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'teacher-community-question') {
    return 'tfk';
  }
}

