<?php

function tfk_news_menu(){
  $items = array();
  $items['news'] = array(
		'title' => 'Teacher News',
		'page callback' => '_teacher_news_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
  $items['test-issues'] = array(
		'title' => 'Issues Page',
		'page callback' => '_test_issues_callback',
		'access callback' => 'user_access',
		'access arguments' => array('access content')
	);
  return $items;
}


function _test_issues_callback(){

  $list = array();


  $email = 'TEST_TK_DIGITAL@TEST.COM';
  $password= 'welcome123';

  $url = 'http://qa-subscription.timeinc.com:80/webservices/customers/'.check_plain($email).'/TK/auth_token';
  $pass_arr = array('password'=>$password, 'CGI-App-Id' => 'com.timeinc.tk.web', 'deviceid' => 'TK.WEB', 'deviceip' => ip_address());
  $pass = drupal_json_encode($pass_arr);

  $response = drupal_http_request($url,
          array('headers' => array('Content-Type'=>'application/json'),
              'method'=> 'POST',
              'data' => $pass,
              'CGI-App-Id' => 'com.timeinc.tk.web'
              ));
  if($response->code == 201){


    $dataResponse = drupal_json_decode($response->data);


    $token = $dataResponse['token'];

    $url = 'http://qa-subscription.timeinc.com:80/webservices/entitlements?CGI-App-Id=com.timeinc.tk.web';
    $entresponse = drupal_http_request($url, array('headers' => array('Content-Type'=>'application/json', 'CGI-token' => $token),
	'method'=> 'GET'
   ));

   $entresponse =  drupal_json_decode($entresponse->data);
//
//   $url = 'http://qa-subscription.timeinc.com:80/webservices/issues?userid='.$email;
//    $tmpresponse = drupal_http_request($url, array('headers' => array('Content-Type'=>'application/json', 'CGI-token' => $token),
//	'method'=> 'GET'
//   ));

   print_r($tmpresponse);



  }else{
    echo 'ERROR GETTING TOKEN';exit;
  }
  

  $list['testvar'] = 'TEST';
  echo  theme('tfk_news_issues_page',$list);
  drupal_exit();
}

function _teacher_news_callback(){
   drupal_set_title('News');
  return '';
}

function tfk_news_block_info() {
  $blocks['tfk-news-taxonomy-links'] = array(
    'info' => t('Taxonomy based navigation for news section')
  );
  $blocks['tfk-news-year-filter'] = array(
    'info' => t('Dropdown with years to filter articles.')
  );
  $blocks['tfk-news-current-filters'] = array(
    'info' => t('Information about current filters.')
  );
  $blocks['tfk-news-latest-news-link'] = array(
    'info' => t('Block with text "Latest News".')
  );
  $blocks['tfk-news-homepage-mini-lessons'] = array(
    'info' => t('Block with proper mini lessons for homepage')
  );
  $blocks['tfk-news-minisite-related-articles'] = array(
    'info' => t('Block with minisite related articles')
  );
  
  return $blocks;
}

function tfk_news_block_view($delta='') {
  $block = array();
  switch ($delta) {
    case 'tfk-news-taxonomy-links':
      $block['subject'] = t('Taxonomy based navigation for news section');
      $block['content'] = _tfk_news_taxonomy_navigation();
      break;
    case 'tfk-news-year-filter':
      $block['subject'] = t('Dropdown with years to filter articles.');
      $block['content'] = _tfk_news_year_filter();
      break;
    case 'tfk-news-current-filters':
      $block['subject'] = t('Information about current filters.');
      $block['content'] = _tfk_news_current_filters();
      break;
    case 'tfk-news-latest-news-link':
      $block['subject'] = t('Block with text "Latest News".');
      $block['content'] = '<div class="link-latest-news">'.l('LATEST NEWS','news').'</div>';
      break;
    case 'tfk-news-homepage-mini-lessons':
      $block['subject'] = t('Block with proper mini lessons for homepage');
      $block['content'] = _tfk_news_homepage_mini_lessons();
      break;
    case 'tfk-news-minisite-related-articles':
      $block['subject'] = t('Block with minisite related articles');
      $block['content'] = _tfk_news_minisite_related_articles();
      break;
    
  }
  
  return $block;
}


function _tfk_news_minisite_related_articles(){
  $rgs = arg();
  
  
  
  if(count($rgs) == 2 && ($rgs[0] == 'node') && is_numeric($rgs[1])){
    $node = node_load($rgs[1]);
    if($node->type == 'article'){
        
      $sql = 'select distinct entity_id from field_data_field_articles fa where fa.entity_type = "node" and fa.bundle ="minisite"
          and fa.field_articles_nid = ';
        
      $result = db_query('SELECT DISTINCT entity_id from field_data_field_articles fa where fa.entity_type = :type and fa.bundle = :bundle and fa.field_articles_nid = :nid',array('type'=> 'node','bundle'=>'minisite','nid'=>1111111));
      $record = $result->fetch();
      
      print_R($record);
//      $result = db_query('SELECT DISTINCT date_format(from_unixtime(field_date_value),:format) as pubdate FROM {field_data_field_date} where bundle = :nodetype order by pubdate desc',array('format' => '%Y','nodetype'=>'article'));
//      $years = array();
//      foreach ($result as $record) {
//        $years[]= $record->pubdate;
//      }
      
      
    }

  }
    
    
  return '!';
}


function _tfk_news_article_additional(){
  //print_r(arg());
}


function _tfk_news_homepage_mini_lessons(){
  $lessons = '';
  if(count(arg()) == 1 && arg(0) == 'node'){
    $flagid = 2;
  }
  if(count(arg()) == 1 && arg(0) == 'news'){
    $flagid = 6;
  }
  if(count(arg()) == 1 && arg(0) == 'kid-reporter'){
    $flagid = 8;
  }


  $result = db_query('SELECT DISTINCT node.title AS node_title, node.nid AS nid, flag_content_node.weight AS flag_content_node_weight FROM {node} node INNER JOIN {flag_content} flag_content_node ON node.nid = flag_content_node.content_id AND flag_content_node.fid = :flagid  WHERE (( (node.status = :nodestatus) AND (node.type IN (:nodetype)) AND (flag_content_node.uid IS NOT NULL ) )) ORDER BY flag_content_node_weight ASC LIMIT 1 OFFSET 0',array('flagid'=>$flagid,'nodestatus'=>1,'nodetype'=>'article'));
  $record = $result->fetch();
  $art_nid = $record->nid;
  $node = node_load($art_nid);

  $tmp_lessons =  field_get_items('node', $node,'field_mini_lessons');

  $i = 1;
  foreach($tmp_lessons as $ind => $lesson){
    $lesson_nid = $lesson['nid'];
    $sql = db_query('select td.name from taxonomy_term_data td
      left join taxonomy_index ti on td.tid = ti.tid where td.vid = :vid and ti.nid = :nid',array('vid' => 6,'nid' => $lesson_nid));
    $res_record = $sql->fetch();

    $lessons .= l('Grade '.$res_record->name,'node/'.$lesson_nid);
    if($i != count($tmp_lessons)){
      $lessons .= ' | ';
    }
    $i++;
  }


  return $lessons;
}


function _tfk_news_current_filters(){
  if(arg(0) == 'news-archive'){
    $str = '<div class="currfilters"><div class="newsarc">News Archive</div><div class="newsarcsmall">';
    if(count(arg()) == 1){
      $str .= 'Viewing: All News; All Dates;';
    }else{
      $arg = arg(1);
      if(!is_numeric(arg(1))){
        
        if(ucfirst(arg(1)) == 'All'){
          $str .= 'Viewing: '.ucfirst(arg(1)) .' Years;';
        }else{
          $str .= 'Viewing: '.ucfirst(arg(1));
        }
      }
      if(is_numeric(arg(1))){
        $str .= 'Year: '.ucfirst(arg(1));
      }
    }
    return $str.'</div></div>';
  }else{
    return '';
  }
  
}

function _tfk_news_taxonomy_navigation(){

  $term = arg(1);

  $vid = 3; //vocabulary id for article categories
  //now we have to get all taxonomy terms from this vocabulary that have articles
  $result = db_query('select distinct ti.tid,td.name from taxonomy_index ti left join taxonomy_term_data td on ti.tid = td.tid left join node n on n.nid = ti.nid where n.type = :type and td.vid = :vid',array('type'=>'article','vid'=>$vid));
  $terms = array();
  
  foreach ($result as $i=> $record) {
    $terms[$i]['term_name']= $record->name;
    $terms[$i]['class']= '';
    if($term == strtolower($record->name)){
      $terms[$i]['class']= 'highlighted';
    }
  }

  $list = array('terms_with_articles' => $terms);
  return theme('tfk_news_taxonomy_links',$list);
}

function _tfk_news_year_filter(){
  //we start with getting a list of years that have articles under them, to put them later as a dropdown
  $result = db_query('SELECT DISTINCT date_format(from_unixtime(field_date_value),:format) as pubdate FROM {field_data_field_date} where bundle = :nodetype order by pubdate desc',array('format' => '%Y','nodetype'=>'article'));
  $years = array();
  foreach ($result as $record) {
    $years[]= $record->pubdate;
  }

  $list = array('list_of_years' => $years);
  $args = arg();
  if(count($args) == 2 && $args[0] == 'news-archive' && is_numeric($args[1])){
    $list['selected_year'] = $args[1];
  }
  return theme('tfk_news_year_filter',$list);
}


/**
 * Implements hook_field_formatter_info().
 */
function tfk_news_field_formatter_info() {
  return array(
    // the key must be unique, so it's best to prefix with your module's name.
    'tfk_news_grade_title' => array(
      // the label is is what is displayed in the select box in the UI.
      'label' => t('Grade Title '),
      // field types is the important bit!! List the field types your formatter is for.
      'field types' => array('node_reference'),
      // You can usually leave 'multiple values' as follows:
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
    ),
  );
}

/**
 * Implements hook_field_formatter_view(). This code just passes straight
 * through to a theme function, MYMODULE_formatter_FORMATTER
 * (e.g. MYMODULE_formatter_MYMODULE_absolute_url).
 */
function tfk_news_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $elements = array();
  foreach ($items as $delta => $item) {
    $elements[$delta] = array(
      '#markup' => theme('tfk_news_formatter_tfk_news_grade_title', array('element' => $item, 'field' => $instance)),
    );
  }
  return $elements;
}



function tfk_news_theme() {
  return array(
    'tfk_news_taxonomy_links' => array(
      'template' => 'tfk-news-taxonomy-links',
      'variables' => array('list' => NULL),
    ),
    'tfk_news_year_filter' => array(
      'template' => 'tfk-news-year-filter',
      'variables' => array('list' => NULL),
    ),
    'tfk_news_formatter_tfk_news_grade_title' => array(
      // Don't forget that all Drupal 7 theme functions have only one argument,
      // so you declare what variables get passed within that argument instead.
      // See http://drupal.org/node/224333#theme_changes
      'variables' => array('element' => NULL),
    ),
     'tfk_news_issues_page'=> array(
      'template' => 'tfk-news-issues-page',
      'variables' => array('list' => NULL),
    ),
    
  );
}



function theme_tfk_news_formatter_tfk_news_grade_title($element) {
  // This code is specific to the Link field. It is based on theme_link_formatter_plain().

  if($element['element']['node']->type == 'mini_lesson'){
    $nid = $element['element']['node']->nid;
    $sql = db_query('select td.name from taxonomy_term_data td
            left join taxonomy_index ti on td.tid = ti.tid where td.vid = :vid and ti.nid = :nid',array('vid' => 6,'nid' => $nid));
    $res_record = $sql->fetch();

    if($res_record->name == '2'){
      return l('Grade '.$res_record->name,'node/'.$nid);
    }else{
      return l('Grades '.$res_record->name,'node/'.$nid);
    }

    
  }
  
  return '';
}




function tfk_news_views_query_alter(&$view, &$query) {
  if($view->name == 'news_archive'){
    if(strlen(arg(1)) == 4 && is_numeric(arg(1))){

      unset($query->where[0]['conditions'][2]);

      $jan = mktime(0, 0, 0, '12', '31', arg(1)-1);
      $dec = mktime(0, 0, 0, '01', '01', arg(1)+1);

      $query->where[0]['conditions'][] = array(
          'field' => 'field_data_field_date.field_date_value',
          'value' => $jan,
          'operator' => ' > '
      );
      
      $query->where[0]['conditions'][] = array(
          'field' => 'field_data_field_date.field_date_value',
          'value' => $dec,
          'operator' => ' < '
      );
      $query->fields['field_data_field_date'] = array(
          'field' => 'field_data_field_date.field_date_value',
          'table' => '',
          'alias' => 'field_data_field_date'
      );
      $query->table_queue['field_data_field_date'] = array(
          'table' => 'field_data_field_date',
          'num' => 1,
          'alias' => 'field_data_field_date',
          'join' => clone $query->table_queue['field_data_field_tout_image']['join']
      );

      $query->table_queue['field_data_field_date']['join']->definition['table'] = 'field_data_field_date';
      $query->table_queue['field_data_field_date']['join']->table = 'field_data_field_date';

      $query->tables['field_data_field_date'] = array(
          'count' => 1,
          'alias' => 'field_data_field_date'
      );

      $query->relationships['field_data_field_date'] = array(
          'link' => 'node',
          'table' => 'node',
          'base' => 'node'
      );
    }
  }
}


function tfk_news_node_view($node, $view_mode, $langcode) {

  $tmp_body =  field_get_items('node', $node, 'field_body');
  

  if($node->type == 'article' && isset($node->field_kid_reporter['und'][0]) && $view_mode == 'full'){

    $tmp_body =  field_get_items('node', $node, 'field_body');


    $body = $tmp_body[0]['value'];

    $imgs_reg = preg_match_all('/<div class="inline-img(.*?)<\/div><p>/i',$body,$matches_imgs);
    if(!empty($matches_imgs)){
      foreach($matches_imgs[0] as $k=>$temp_img){
        $body = str_replace($temp_img, '<p>'.$temp_img.'</p>', $body);
      }
    }


    $reporter = $node->field_kid_reporter;
    //lets get thumb_image for the reporter
    $result = db_query('select fm.filename,f.field_thumbnail_image_fid as thumb_fid from {field_data_field_thumbnail_image} f
    left join file_managed fm on f.field_thumbnail_image_fid = fm.fid
    where f.entity_type = :entity_type and f.bundle = :bundle and f.entity_id = :entity_id',array('entity_type'=>'node','bundle'=>'kid_reporter','entity_id' => $reporter['und'][0]['nid']));
    $record = $result->fetch();

    $thumb_path = file_create_url(file_build_uri(basename($record->filename)));

    $tmp_title =  field_get_items('node', $node,'field_kid_reporter');
    $reporter_name = $tmp_title[0]['node']->title;

    $reporter_alias = drupal_lookup_path('alias','node/'.$tmp_title[0]['nid']);

    
    $badge = '<div class="reporter-badge"><div id="badge-header">Kid Reporter</div><div id="badge-badge"></div>
      <img class="reporter-badge-photo" src="'.$thumb_path.'"/>'.l($reporter_name,$reporter_alias,array('attributes' => array('class' => array('reporter-link-a')))).'
        </div>';

    $body = preg_replace('/[\r\n]+/', '', $body);
    $reg = preg_match_all('/<p(.*?)>(.*?)<\/p>/i',$body,$matches);
    
    $paragraphs_count = count($matches[2]);

    $odd = $paragraphs_count%2;

   // if($odd == 0){
    $half_index = round($paragraphs_count / 2);
    //}else{
    //  $half_index = round($paragraphs_count / 2) + 1;
   // }

    array_splice($matches[2],$half_index,0,$badge);
    $body = '';
    foreach($matches[2] as $k => $paragraph){
      $body .= '<p '.$matches[1][$k].'>'.$paragraph.'</p>';
    }
   $node->content['field_body'][0]['#markup'] = $body;

  }

  if($node->type == 'article'){
     $count = count($node->content['field_mini_lessons']['#object']->content['field_mini_lessons']['#items']);

     for($i = 0; $i < $count - 1; $i++ ){
      $node->content['field_mini_lessons']['#object']->content['field_mini_lessons'][$i]['#markup'] .= '&nbsp;&nbsp;|';
     }

  }


}



function tfk_news_preprocess_block(&$variables){
  if(is_numeric(arg(1))){
    $node = node_load(arg(1));
    if(!isset($node->field_kid_reporter['und'][0])){
      if($variables['block']->delta == 'random_kid_reporters-block'){
        unset($variables['content']);
      }
    }
  }
}

function tfk_news_preprocess_page(&$vars) {
  $rgs = arg();
  
  if(count($rgs) == 2 && ($rgs[0] == 'node') && is_numeric($rgs[1])){
    $node = node_load($rgs[1]);
    if($node->type == 'article'){
      $vars['section_title'] = 'News';
      if(isset($node->field_kid_reporter['und'][0])){
        $vars['section_title'] = 'Kid Reporters';
        $vars['custclass'] = 'withkidrep';

      }
    }

    if($node->type == 'kid_reporter'){
      $vars['section_title'] = 'Kid Reporters';
    }

    if($node->type == 'mini_lesson'){
      $vars['section_title'] = 'News';
    }


  }

  if($rgs[0] == 'news-archive'){
    $vars['section_title'] = 'News';
  }


  $is_anon = 0;
    global $user;
    $user_roles = $user->roles;
    if(count($user_roles) == 1 && in_array('anonymous user',$user_roles)){
      $is_anon = 1;
    }
    $vars['is_anon'] = $is_anon;


}

function tfk_preprocess_html(&$variables) {
  $rgs = arg();

  global $user;
  $roles = $user->roles;
 
  if(count($roles) == 2 && in_array('teacher', $roles)){
    $variables['classes_array'][] = 'loggedteacher';
  }
  if(count($rgs) == 2 && ($rgs[0] == 'node') && is_numeric($rgs[1])){
    $node = node_load($rgs[1]);
    if($node->type == 'article'){
      if(isset($node->field_kid_reporter['und'][0])){
        $variables['classes_array'][] = 'with-kid-reporter';
      }
    }
  }
} 


function tfk_news_preprocess_node(&$variables){


  $variables['is_kid_reporter_article'] = 0;

  if($variables['type'] == 'article'){


    $is_anon = 0;
    global $user;
    $user_roles = $user->roles;
    if(count($user_roles) == 1 && in_array('anonymous user',$user_roles)){
      $is_anon = 1;
    }
    $variables['is_anon'] = $is_anon;


    //print_R($variables);
    if(isset($variables['field_kid_reporter']['und'][0]['nid'])){
      $variables['is_kid_reporter_article'] = 1;
    }
    
    if(isset($variables['field_mini_lessons']['und'])){
        $tmp_lessons = $variables['field_mini_lessons']['und'];
        $lsessons = '';
        $i = 1;
        foreach($tmp_lessons as $ind => $lesson){
          $lesson_nid = $lesson['nid'];
          $sql = db_query('select td.name from taxonomy_term_data td
            left join taxonomy_index ti on td.tid = ti.tid where td.vid = :vid and ti.nid = :nid',array('vid' => 6,'nid' => $lesson_nid));
          $res_record = $sql->fetch();

          $lessons .= l('Grade '.$res_record->name,'node/'.$lesson_nid);
          if($i != count($tmp_lessons)){
            $lessons .= ' | ';
          }
          $i++;
        }
        $variables['article_mini_lessons'] = $lessons;
    }


   // print_r($variables);


  }
}

function tfk_news_preprocess_views_view_fields(&$variables){
  
  if($variables['view']->name == 'homepage_top_story'){
    //print_r($variables);exit;
  }

}
